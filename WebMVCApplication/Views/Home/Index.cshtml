@using WebMVCApplication.Entities
@using WebMVCApplication.Common
@model WebMVCApplication.Models.ResultViewModel

@section PageContent {
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true">
}

@{
    ViewData["Title"] = "Home Page";

    var startDate = ViewData["Start-date"] as DateOnly? ?? new DateOnly();
    var endDate = ViewData["End-date"] as DateOnly? ?? new DateOnly();

    var currentDateTime = ViewData["VN-DateTime"] as DateTime? ?? new DateTime();
    var currentTimeOnly = TimeOnly.FromDateTime(currentDateTime);
    var schedules = ViewData["Schedules"] as List<Schedule> ?? new();

    var todaySchedules = schedules
        .Where(s => s.Date == DateOnly.FromDateTime(currentDateTime))
        .OrderBy(s => s.StartTime);
    var recentClass = todaySchedules
        .Where(s => currentTimeOnly < s.EndTime)
        .FirstOrDefault();
    var upcomingClass = todaySchedules
        .Where(s => currentTimeOnly <= s.StartTime)
        .FirstOrDefault();

    string dateInfo = $"{currentDateTime.DayOfWeek}, {(Months)currentDateTime.Month} {currentDateTime.Day}, {currentDateTime.Year}";
    var timeInfo = currentDateTime.ToString("HH:mm:ss");
}

<div class="homepage-container">
    @if (Model?.LoginUser?.UserRole == UserRole.LECTURER)
    {
        <div class="dashboard">
            <div class="dashboard-infor">
                <div class="dashboard-recent-class">
                    <div class="dashboard-recent-class-title">
                        <p class="bold">Lecturer Dashboard</p>
                        <p>Current / Upcoming class</p>
                    </div>
                    <div class="dashboard-recent-class-infor">
                        @if (recentClass is not null)
                        {
                            <i class="fa-solid fa-user-group"></i>
                            <div style="min-width: 200px; flex: 1;">
                                <p>Room: @recentClass.Room?.Name</p>
                                <p>Slot @recentClass.SlotNumber: @recentClass.StartTime.ToString("HH:mm") - @recentClass.EndTime.ToString("HH:mm")</p>
                                <p>Subject: @recentClass.Subject?.Code</p>
                                <p>Class: @recentClass.Class?.ClassCode</p>
                            </div>
                        }
                        else
                        {
                            <div onclick="GoToAllClasses()" style="min-width: 200px; flex: 1;">
                                <p>View classes</p>
                            </div>
                        }
                        <i style="font-size: 12px;" class="fa-solid fa-chevron-right"></i>
                    </div>
                </div>
                <div class="dashboard-datetime">
                    <p>@dateInfo</p>
                    <p class="datetime bold">@timeInfo</p>
                </div>
            </div>
            <div class="dashboard-statistic">
                <div class="dashboard-statistic-left">
                    <div class="upcoming-class">
                        <div>
                            <p class="gray">Upcoming class</p>
                            @if (upcomingClass is null)
                            {
                                <p class="bold">Done</p>
                            }
                            else
                            {
                                <p class="bold">@upcomingClass.Subject?.Code</p>
                            }
                        </div>
                        <i class="fa-regular fa-user"></i>
                    </div>
                    <div class="statistic-class">
                        <div>
                            <p class="gray">Today class</p>
                            <p class="bold">@todaySchedules.Where(s => s.StartTime <= currentTimeOnly).Count()/@todaySchedules.Count()</p>
                        </div>
                        <i class="fa-solid fa-tablet"></i>
                    </div>
                </div>
                <div class="dashboard-statistic-right">
                    <p class="gray">Subject Prepare</p>
                    <div class="dashboard-subject-prepare">
                        <div class="dashboard-subjects">
                            @foreach (var item in todaySchedules.Where(s => s.EndTime > currentTimeOnly))
                            {
                                <p class="bold">@item.Subject?.Code</p>
                            }
                        </div>
                        <i class="fa-solid fa-swatchbook"></i>
                    </div>
                </div>
            </div>
        </div>
    }
    
    <div class="calendar">
        <div class="calendar-title">
            <div>
                <p class="medium">Calendar</p>
            </div>
            @if (Model?.LoginUser?.UserRole == UserRole.LECTURER)
            {
                <div class="calendar-title-buttons">
                    <div class="calendar-title-button">
                        <i class="fa-solid fa-clock-rotate-left"></i>
                        <p>Import Record</p>
                    </div>
                    <div class="calendar-title-button">
                        <i class="fa-solid fa-database"></i>
                        <p>Prepare Schedule For Day</p>
                    </div>
                    <div class="calendar-title-button">
                        <i class="fa-regular fa-image"></i>
                        <p>Import FAP Image</p>
                    </div>
                    <div class="calendar-title-button">
                        <i class="fa-solid fa-folder-plus"></i>
                        <p>Import Excel</p>
                    </div>
                </div>
            }
        </div>
        <div class="calendar-timetable">
            <div class="calendar-timetable-title">
                <div class="calendar-timetable-title-left">
                    <i class="fa-regular fa-calendar"></i>
                    <p>@((Months)currentDateTime.Month) @startDate.Day - @endDate.Day</p>
                </div>
                <div class="calendar-timetable-title-right">
                    <div>Semester: @ViewData["Current-semester-code"]</div>
                    <div class="calendar-timetable-title-button">
                        <div class="calendar-timetable-title-prevButton">
                            <i class="fa-solid fa-caret-left"></i>
                            <p>Prev</p>
                        </div>
                        <div class="calendar-timetable-title-nextButton">
                            <i class="fa-solid fa-caret-right"></i>
                            <p>Next</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="calendar-timetable-table">
                <div class="calendar-timetable-table-header">
                    <div class="calendar-timetable-table-time-column"></div>
                    @for (DateOnly date = startDate; date <= endDate; date = date.AddDays(1))
                    {
                        <div class="calendar-timetable-table-day-column @(currentDateTime.Day == date.Day ? "current" : "")">
                            <span>@date.Day @date.DayOfWeek.ToString().Substring(0, 3)</span>
                            <div class="calendar-timetable-table-day-column-seperate"></div>
                        </div>
                    }
                    <div class="calendar-timetable-table-day-column"></div>
                </div>
            </div>
            <div class="calendar-timetable-table body">
                <div class="calendar-timetable-table-body">
                    <div class="calendar-timetable-table-time-column">
                        <div class="calendar-timetable-table-time-slot"><span>6:00 AM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>7:00 AM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>8:00 AM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>9:00 AM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>10:00 AM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>11:00 AM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>12:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>1:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>2:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>3:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>4:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>5:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>6:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>7:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>8:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>9:00 PM</span></div>
                        <div class="calendar-timetable-table-time-slot"><span>10:00 PM</span></div>
                    </div>
                    @for (DateOnly date = startDate; date <= endDate; date = date.AddDays(1))
                    {
                        IEnumerable<Schedule> currentSchedules = schedules.Where(s => s.Date == date);
                        bool checkCurrentTime = currentDateTime.Day == date.Day;
                        var timelinePosition = currentTimeOnly.AddHours(-6).Hour * 60 + (double)currentTimeOnly.Minute;

                        <div class="calendar-timetable-table-day-column">
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>
                            <div class="calendar-timetable-table-day-slot @(checkCurrentTime ? "current" : "")"></div>

                            @foreach (var schedule in currentSchedules)
                            {
                                var timeDifference = (schedule.StartTime.AddHours(-6)).Hour * 60 + (double)schedule.StartTime.Minute;
                                var timeDuration = (schedule.EndTime - schedule.StartTime).TotalMinutes;

                                string scheduleStatus = "";
                                if (date.Day == currentDateTime.Day && schedule.StartTime <= currentTimeOnly && 
                                    currentTimeOnly <= schedule.EndTime)
                                    scheduleStatus = "active";
                                else if (date.Day > currentDateTime.Day)
                                    scheduleStatus = "future";

                                <div class="calendar-timetable-table-event" data-status="@scheduleStatus"
                                     style="top: @(timeDifference + timeDifference/60)px; height: @(timeDuration + timeDuration/60)px;">
                                    <p class="slot-time">@schedule.StartTime.ToString("hh:mm tt") - @schedule.EndTime.ToString("hh:mm tt")</p>
                                    <p class="slot-info">@schedule.Subject?.Code</p>
                                    <p class="slot-info">@schedule.Room?.Name</p>
                                    <p class="slot-info">@schedule.Class?.ClassCode</p>
                                    <p class="slot-number">Slot @schedule.SlotNumber</p>
                                </div>
                            }

                            <div class="current-time-line @(checkCurrentTime ? "active" : "")" style="top: @(timelinePosition + timelinePosition/60)px;"></div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (Model?.LoginUser?.UserRole == UserRole.LECTURER)
    {
        <div class="old-schedule">
            <div class="old-schedule-title">
                <p>Old Schedule (Last 5 days)</p>
                <div class="search-bar">
                    <input onchange="filterOldSchedules(this)" type="text" placeholder="Search by class code" />
                    <i class="fa-solid fa-magnifying-glass"></i>
                </div>
            </div>
            <div class="old-schedule-header">
                <span>Date</span>
                <span>Class</span>
                <span>Subject</span>
                <span>Room</span>
                <span>Slot</span>
                <span>Attended Student</span>
                <span>Attend Class</span>
                <span style="border:none;">Detail</span>
            </div>
            <div class="old-schedule-list">
                <div class="old-schedule-item">
                    <span>16/12/2024</span>
                    <span class="class-code">SE1845-IoT102t</span>
                    <span>IoT102t</span>
                    <span>302</span>
                    <span>1</span>
                    <span>0/16</span>
                    <div>
                        <span class="absence">Not Attended</span>
                    </div>
                    <div>
                        <div class="info">
                            <i class="fa-solid fa-info"></i>
                        </div>
                    </div>
                </div>
                <div class="old-schedule-item">
                    <span>16/12/2024</span>
                    <span class="class-code">SE1845-IoT102t</span>
                    <span>IoT102t</span>
                    <span>302</span>
                    <span>1</span>
                    <span>0/16</span>
                    <div>
                        <span class="absence">Not Attended</span>
                    </div>
                    <div>
                        <div class="info">
                            <i class="fa-solid fa-info"></i>
                        </div>
                    </div>
                </div>
                <div class="old-schedule-item">
                    <span>16/12/2024</span>
                    <span class="class-code">SE1845-IoT102t</span>
                    <span>IoT102t</span>
                    <span>302</span>
                    <span>1</span>
                    <span>0/16</span>
                    <div>
                        <span class="attended">Attended</span>
                    </div>
                    <div>
                        <div class="info">
                            <i class="fa-solid fa-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    function checkWindowSize() {
        if ($(window).width() >= 5000) {
            UpdateEventPosition(3);
        }
        else if ($(window).width() >= 1890) {
            UpdateEventPosition(2);
        }
        else{
            UpdateEventPosition(1);
        }
    }

    // $(window).resize(function () {
    //     checkWindowSize();
    // });

    function UpdateEventPosition(gap = 1){
        $(".calendar-timetable-table-event").each(function(index, element){
            var currentTop = parseInt($(element).css('top'), 10);
            var multi = currentTop / 60;
            var newTop = multi * 60 + multi * gap;
            $(element).css("padding-bottom", (multi-1)*gap + "px");
            $(element).css("top", newTop + "px");
        });
    }

    function GoToAllClasses(){

    }

    function filterOldSchedules(classCode){

    }
</script>
